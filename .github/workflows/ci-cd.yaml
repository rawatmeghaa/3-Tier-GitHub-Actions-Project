name: Nodejs CICD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout_code
        uses: actions/checkout@v4

      - name: Set up node js
        uses: actions/setup-node@v4

        with:
          node-version: '23'
      - name: Frontend Compilations
        run: |
          cd client
          find . -name "*.js" -exec node --check {} +

      - name: Backend Compilations
        run: | 
          cd api
          find . -name "*.js" -exec node --check {} +

  gitleaks_scan:
    runs-on: ubuntu-latest
    needs: compile
    steps:
        - name: checkout_code
          uses: actions/checkout@v4
        - name: Gitleak Setup
          uses: gitleaks/gitleaks-action@v2
        - name: Gitleaks scan
          run: |
            gitleaks detect --source  ./client --exit-code 1
            gitleaks detect --source ./api --exit-code 1
  
  tivy_scan:
    runs-on: ubuntu-latest
    needs: gitleaks_scan
    steps:
      - name: checkout_code
        uses: actions/checkout@v4
      - name: Trivy Installations
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'

  sonar_frontend_analysis:
    runs-on: ubuntu-latest
    needs: tivy_scan
    steps:
      - name: checkout_code
        uses: actions/checkout@v4
      - name: Sonarqube_installations
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: client
          args: >
            -Dsonar.organization=rawatmeghaa
            -Dsonar.projectKey=rawatmeghaa_3-Tier-GitHub-Actions-Project
            -Dsonar.projectName=3-Tier-GitHub-Actions-Project
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**
        env:
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
          SONAR_HOST_URL: https://sonarcloud.io

  sonar_backend_analyis:
    runs-on: ubuntu-latest
    needs: sonar_frontend_analysis
    steps:
      - name: checkout_code
        uses: actions/checkout@v4
      - name: Sonarqube_installations
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: api
          args: >
            -Dsonar.organization=rawatmeghaa
            -Dsonar.projectKey=rawatmeghaa_3-Tier-GitHub-Actions-Project
            -Dsonar.projectName=3-Tier-GitHub-Actions-Project
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**
        env:
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
          SONAR_HOST_URL: https://sonarcloud.io

  build_frontend_docker_image_and_push:
    runs-on: ubuntu-latest
    needs: sonar_backend_analyis
    steps:
      - name: checkout_code
        uses: actions/checkout@v4
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./client
          push: true
          tags: megha609/app:latest
          file: ./client/Dockerfile